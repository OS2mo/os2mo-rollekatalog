# SPDX-FileCopyrightText: Magenta ApS <https://magenta.dk>
# SPDX-License-Identifier: MPL-2.0
[tool.poetry]
name = "os2mo_rollekatalog"
version = "0.0.0" # versioning handled by conventional commits
description = "OS2mo integration for OS2rollekatalog"
authors = ["Magenta ApS <info@magenta.dk>"]
license = "MPL-2.0"

[tool.poetry.dependencies]
python = "^3.11"
pydantic = {version = "^1", extras=["email"]}
structlog = "^24.1.0"
uvicorn = "^0.29.0"
httpx = "^0.27.0"
fastramqpi = "^7.5.0"
fastapi = "^0.111.0"
sqlalchemy = "^2.0.30"

[tool.poetry.group.pre-commit.dependencies]
mypy = "^1.8.0"
pre-commit = "^3.6.0"
ruff = "^0.4.4"
deptry = "^0.23.0"

[tool.poetry.group.test.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.19.0"
pytest-cov = "^4.1.0"
pytest-split = "^0.8.2"

[tool.poetry.group.dev.dependencies]
ariadne-codegen = "0.7.1"
respx = "^0.21.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
asyncio_mode="auto"

[tool.mypy]
plugins = "pydantic.mypy"

[tool.ariadne-codegen]
# Ideally, the GraphQL client is generated as part of the build process and
# never committed to git. Unfortunately, most of our tools and CI analyses the
# project directly as it is in Git. In the future - when the CI templates
# operate on the built container image - only the definition of the schema and
# queries should be checked in.
#
# The default package name is `graphql_client`. Make it more obvious that the
# files are not to be modified manually.
target_package_name = "autogenerated_graphql_client"
target_package_path = "os2mo_rollekatalog/"
client_name = "GraphQLClient"
schema_path = "schema.graphql"  # curl -O http://localhost:5000/graphql/v22/schema.graphql
queries_path = "queries.graphql"
plugins = [
    # Return values directly when only a single top field is requested
    "ariadne_codegen.contrib.shorter_results.ShorterResultsPlugin",
]
[tool.ariadne-codegen.scalars.DateTime]
type = "datetime.datetime"
[tool.ariadne-codegen.scalars.UUID]
type = "uuid.UUID"

[tool.coverage.report]
omit = [
  "os2mo_rollekatalog/autogenerated_graphql_client/*",
]

[tool.deptry]
extend_exclude = [
  "os2mo_rollekatalog/autogenerated_graphql_client/*"
]
[tool.deptry.per_rule_ignores]
DEP002 = [
  # uvicorn is used by the Dockerfile
  "uvicorn",
]
