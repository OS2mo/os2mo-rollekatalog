# SPDX-FileCopyrightText: Magenta ApS <https://magenta.dk>
# SPDX-License-Identifier: MPL-2.0

import logging

from fastapi import FastAPI
from fastramqpi.main import FastRAMQPI

from os2mo_rollekatalog import api
from os2mo_rollekatalog import events
from os2mo_rollekatalog import models
from os2mo_rollekatalog import rollekatalog
from os2mo_rollekatalog.autogenerated_graphql_client import GraphQLClient
from os2mo_rollekatalog.config import _Settings
from os2mo_rollekatalog.junkyard import create_ldap_client


def create_app() -> FastAPI:
    settings = _Settings()

    fastramqpi = FastRAMQPI(
        application_name="rollekatalog",
        settings=settings.fastramqpi,
        graphql_version=25,
        graphql_client_cls=GraphQLClient,
        database_metadata=models.Base.metadata,
    )
    fastramqpi.add_context(settings=settings)

    client = rollekatalog.create_authenticated_client(
        settings.sync_enabled, settings.rollekatalog_url, settings.api_key
    )
    fastramqpi.add_context(title_client=client)

    ldap_client = create_ldap_client(settings.ldap_url) if settings.ldap_url else None
    fastramqpi.add_context(ldap_client=ldap_client)

    rollekatalog_task = rollekatalog.Rollekatalog(
        interval=settings.interval,
        client=client,
        sessionmaker=fastramqpi.get_context()["sessionmaker"],
    )
    fastramqpi.add_context(rollekatalog=rollekatalog_task)
    fastramqpi.add_lifespan_manager(rollekatalog_task.lifespan())
    rollekatalog_task.sync_soon()

    # FastAPI router
    app = fastramqpi.get_app()
    app.include_router(api.router)

    # MO AMQP
    mo_amqp_system = fastramqpi.get_amqpsystem()
    mo_amqp_system.router.registry.update(events.router.registry)

    # HTTPX is too loud by default.
    logging.getLogger("httpx").setLevel(logging.WARN)

    return app
