# Generated by ariadne-codegen on 2024-06-03 14:08
# Source: queries.graphql

from .async_base_client import AsyncBaseClient
from .get_titles import GetTitles, GetTitlesClasses
from .get_version import GetVersion, GetVersionVersion


def gql(q: str) -> str:
    return q


class GraphQLClient(AsyncBaseClient):
    async def get_version(self) -> GetVersionVersion:
        query = gql(
            """
            query GetVersion {
              version {
                mo_version
              }
            }
            """
        )
        variables: dict[str, object] = {}
        response = await self.execute(query=query, variables=variables)
        data = self.get_data(response)
        return GetVersion.parse_obj(data).version

    async def get_titles(self) -> GetTitlesClasses:
        query = gql(
            """
            query GetTitles {
              classes(filter: {facet: {user_keys: "engagement_job_function"}}) {
                objects {
                  current {
                    user_key
                    uuid
                  }
                }
              }
            }
            """
        )
        variables: dict[str, object] = {}
        response = await self.execute(query=query, variables=variables)
        data = self.get_data(response)
        return GetTitles.parse_obj(data).classes
